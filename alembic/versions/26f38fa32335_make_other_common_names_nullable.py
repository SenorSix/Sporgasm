"""Make other_common_names nullable

Revision ID: 26f38fa32335
Revises: 
Create Date: 2025-06-07 12:43:35.602231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '26f38fa32335'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mushroom_photos')
    op.alter_column('mushrooms', 'other_common_names',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=postgresql.ARRAY(sa.String()),
               existing_nullable=True)
    op.alter_column('mushrooms', 'scientific_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mushrooms', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('mushrooms', 'home_photo_path',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('mushrooms', 'home_photo_path',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mushrooms', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mushrooms', 'scientific_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('mushrooms', 'other_common_names',
               existing_type=postgresql.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.create_table('mushroom_photos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('mushroom_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('photo_path', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('caption', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('photographer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['mushroom_id'], ['mushrooms.id'], name=op.f('mushroom_photos_mushroom_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('mushroom_photos_pkey'))
    )
    # ### end Alembic commands ###
